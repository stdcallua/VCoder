// Файл описания структур связанных с моделью
#define CH_COUNT 8 // Количество физически передаваемых каналов
#define UCH_COUNT 14 // Количество пользовательских каналов
#define MIXER_COL 40 // максимальное количество микшеров в полетном режиме

// Описание кривой канала
typedef struct {
      unsigned char active; // признак включения кривой канала
        signed char point[9];   // ордината точки
                        // по оси абцисс -100%  -75%  -50%  -25%  0  25%  50%  75%  100%
} CURVE_STRUCT;

typedef struct {
unsigned       ACTIVE:1, // микшер активен (существует)
    
          SOURSE_TYPE:1, // 0 - микширование c UCH, 1 - микширование c LCH
          
          PROC_SOURSE:1, // 0 - фиксированное, 1 - регулируемое микширование

               MIX_SW:1, // 0 - без выключателя, 1 - выключатель микшера
               
               SW_INV:1, // инверсия выключателя микшера
               
               UCH_SW:3; // выключатель микшера
} TMIX_TYPE;

typedef struct {
unsigned    CH_SOURSE:4, // канал источник - зависит от SOURSE_TYPE !!
            CH_DEST:4;   // канал получатель
} TCH_NUM;

// Описание записи о микшере канала
typedef struct {
  TMIX_TYPE    MIX_TYPE;  // тип микширования
  TCH_NUM        CH_NUM;  // каналы для микширования 
  unsigned char MIX_VAL;  // при PROC_SOURSE=0 процент микширования(-128..+127)
                          // при PROC_SOURSE=1 bit3210 - источник коэффициента микширования (UCH канал)
                          //                   bit4 - знак микширования UCH канала
} MIXER_STRUCT;

// Описание записи о полетных режимах
typedef struct {
    unsigned char  FMODE_NAME;       // Номер имени полетного режима (выбор из стандартных)
    unsigned char  TRIMSTEP;         // множитель значения тримера
    signed char    UCH_TRIMMER[7];   // Триммеры аналоговых органов управления
    unsigned int   LCH_MIDLE[16];    // Длины импульсов соответствующих серединам каналов
    CURVE_STRUCT   LCH_CURVE[16];    // кривые каналов полетного режима
    MIXER_STRUCT   MIXER[MIXER_COL]; // MIXER - микшеры полетного режима
} FMODE_STRUCT;

// Описание записи о пользовательских каналах управления используемых в модели
typedef struct {
   signed char UCH_LEFT;  // Крайнее левое значение пользовательского канала, значение в % -128.. +127 
   signed char UCH_RIGHT; // Крайнее правое значение пользовательского канала, значение в % -128.. +127
} UCH_STRUCT;

typedef struct {
   unsigned char FILTER_TYPE; // тип фильтра, в настоящее время планируются следующие:
/**                                 0 - прямая выдача в канал без фильтра
                                    1 - выдача в канал с выключателем
                                    2 - мультиплексирование канала
**/
   unsigned int        VAL1; // параметр фильтра
/**                                  - для фильтра 1:
                                          младший байт - номер выключателя 
                                          старший байт - значение в % при включенном выключателе
                                    - для фильтра 2 биты показывают какие каналы мультиплексируются (уста-
                                                (новкой соответствующего бита в 1)
                                                последовательность каналов: 1 2 3 4 5 6 7 8 9 A B C D E F G
                                                  

**/
                                   
                                   //   unsigned char        VAL2; // второй параметр фильтра
} TCHFILTERS;

typedef struct {   // логические каналы
  unsigned char    LCH_COUNT; // количество используемых моделью логических каналов - от 1 до 16 !!
  unsigned int    CH_EPL[16]; // левые крайние точки физических каналов
  unsigned int    CH_EPR[16]; // правые крайние точки физических каналов
  
  unsigned char   LCHDELDN[16]; // задержка при изменении значения канала при изменении вниз
      unsigned char   LCHDELUP[16]; // задержка при изменении значения канала при изменении вверх
  
  unsigned char    LCH_REV[16]; // признак инверсии каналов LCH
   
                   // физические каналы
  unsigned char PPM_CH_COUNT; // количество каналов передаваемых в пачке PPM (от этого зависит количество фильтров)
  TCHFILTERS       FILTER[8]; // Фильтры пост- обработки LCH в CH  
} TCHANNELS;

// Описание записи о модели
typedef struct {
    unsigned char       MODEL_TYPE;       // Тип модели: 0- самолет, 1 - планер, 2 - вертолет
    unsigned char       MODEL_NAME[8];    // Имя модели

    unsigned int        MODEL_FLYTIMER;   // Значение обратного таймера на полет модели
    unsigned int        MODEL_LIVETIMER;  // Общее время полета модели

    TCHANNELS           CHANNELS;         // настройки физических и логических каналов каналов модели
    UCH_STRUCT          UCH[UCH_COUNT];   // информация о каждом из 14 каналов UCH    
    unsigned char       PPM_TO_LCH_CAP[8]; // номера LCH каналов для для захвата PPM каналов с тренерского разъема
    unsigned char       FMODE_COUNT;      // Количество заданных полетных режимов
    FMODE_STRUCT        FMODE[3];         // Информация о полетных режимах    

} MODEL_INFO_STRUCT;

MODEL_INFO_STRUCT rmodel;